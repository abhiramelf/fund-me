{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "fund",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Requirements High level: A contract through which users can send money to it and I can withdraw Steps to build: A minimum donation amount needs to be set A function to send the funds to the contract A function that can call an external oracle to convert between ETH/USD A function that can withdraw the amount only by contract owner",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/FundMe.sol": "FundMe"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/FundMe.sol": {
			"keccak256": "0xc406b1d1e1520607af66245af53eaef9c632a2985b1d59692ba7fd524dd50d89",
			"license": "MIT",
			"urls": [
				"bzz-raw://d848d6ee8a29cc05507539879bc93482de9552a1e8fe46b04851c25ee9303d39",
				"dweb:/ipfs/QmVFWjYLyAgfuXv52AgZAE4b8KsBt6NTUNmdBb3cYGM9rZ"
			]
		}
	},
	"version": 1
}